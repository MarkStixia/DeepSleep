<Window x:Class="DeepSleep.NotificationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DeepSleep"
        mc:Ignorable="d"
      Title="Deep Sleep Notification" ShowInTaskbar="False" WindowStartupLocation="Manual" Background="Transparent" WindowStyle="None" ResizeMode="NoResize" Icon="Appicon.ico" Height="150" Width="350" AllowsTransparency="True" Topmost="True" MouseRightButtonUp="Window_MouseRightButtonUp">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <Style x:Key="AddTimeButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="13" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="(Window.Opacity)"
                                 From="0.0" To="1.0" Duration="0:0:1"
                                 AutoReverse="False"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
    <Border Background="#F21C1A1A" CornerRadius="30">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="24*"/>
                <ColumnDefinition Width="303*"/>
                <ColumnDefinition Width="24*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="25*"/>
                <RowDefinition Height="17*"/>
                <RowDefinition Height="15*"/>
                <RowDefinition Height="25*"/>
                <RowDefinition Height="10*"/>
            </Grid.RowDefinitions>
            <Image Grid.RowSpan="2" Source="/Resources/AppIcon.ico"  Width="35" Height="35" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Top"/>
            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top">
                <TextBlock Grid.Row="2" Grid.Column="1" x:Name="NotificationText" Text="До выключения осталось менее 30 мин" TextWrapping="Wrap" MaxWidth="270" Foreground="White" FontSize="19" VerticalAlignment="Bottom" Grid.ColumnSpan="2"/>
            </StackPanel>

            <TextBlock Grid.Row="3" Grid.Column="1" Text="Окно закроется через 10 сек" Foreground="Gray" FontSize="12" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
            <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
                <Button Uid="5_min" Click="AddTimeButton_Click" Style="{DynamicResource AddTimeButtonStyle}" Height="30" Width="50" Content="+5 мин." Background="#a2a2a2"/>
                <Button Uid="15_min" Click="AddTimeButton_Click" Style="{DynamicResource AddTimeButtonStyle}" Content="+15 мин." Height="30" Width="50" Margin="15 0" Background="#a2a2a2"/>
                <Button Uid="30_min" Click="AddTimeButton_Click" Style="{DynamicResource AddTimeButtonStyle}" Content="+30 мин." Height="30" Width="50" Background="#FFD812"/>
            </StackPanel>
        </Grid>

    </Border>
</Window>
