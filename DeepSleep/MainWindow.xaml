<Window x:Class="DeepSleep.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DeepSleep"
        mc:Ignorable="d"
        Style="{DynamicResource CustomWindowStyle}"
         Background="Transparent" BorderThickness="0" ResizeMode="CanMinimize" Height="470" Width="600" Closing="OnClose" StateChanged="OnStateChanged" IsVisibleChanged="OnIsVisibleChanged" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="HoverButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#1C1A1A"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF272424"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AccentButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#b0ad1b"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#999720"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FFD812"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FFD812"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FFD812"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FFD812"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FFD812"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FFD812"/>
        <Style x:Key="TimeTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0 0 0 1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFD812"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF7D6909"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="CircleAccentButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="#FFD812"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="35" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Cursor" TargetName="border" Value="Hand"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                <Setter Property="Cursor" TargetName="border" Value="None"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border Background="#F91A1A1A" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
        <Grid>
           
            <Border VerticalAlignment="Top" Height="36" Margin="1,0,-1,0">
            </Border>
            <Grid x:Name="HomePage" Visibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Top" Grid.Row="1">
                    <Border Background="#FF0D0D0D" CornerRadius="22" Width="150" Height="150" Visibility="Visible">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="73*"/>
                                <RowDefinition Height="30*"/>
                                <RowDefinition Height="47*"/>
                            </Grid.RowDefinitions>
                            <Image x:Name="TurnOnImage" Height="50" Width="50" VerticalAlignment="Bottom" Source="/Resources/AppIcon.ico" Stretch="Fill" />
                            <StackPanel Grid.Row="2">
                                <Image Tag="On" Cursor="Hand" x:Name="SleepOnToggle" Source="/Icons/ToggleOn.png" Height="22" Width="36" MouseLeftButtonDown="SleepOnToggle_MouseLeftButtonDown"/>
                                <TextBlock x:Name="SleepOnToggleText" Text="Вкл" Foreground="WhiteSmoke" HorizontalAlignment="Center"/>
                            </StackPanel>

                        </Grid>
                    </Border>
                    <Border Margin="20 0 0 0" Background="#FF0D0D0D" CornerRadius="22" Width="150" Height="150">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="36*"/>
                                <RowDefinition Height="67*"/>
                                <RowDefinition Height="47*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Время выключения" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="14"/>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Orientation="Horizontal">
                                <TextBox Uid="hours" TextChanged="_maskedTextBox_TextChanged" x:Name="TimeBox1" MaxLength="2" TextAlignment="Center" Text="00" FontSize="36" Foreground="White" VerticalAlignment="Bottom" Width="50" Style="{DynamicResource TimeTextBoxStyle}" PreviewTextInput="OnlyDigitsProcedure" PreviewKeyDown="NoInsertProcedure" ContextMenu="{x:Null}" LostKeyboardFocus="NormalizeTimeFormat"/>
                                <TextBlock Margin="10 0" Text=":" Foreground="White" FontSize="44" VerticalAlignment="Center"/>
                                <TextBox Uid="minutes" TextChanged="_maskedTextBox_TextChanged" x:Name="TimeBox2" MaxLength="2" TextAlignment="Center" Text="00" FontSize="36" Foreground="White" VerticalAlignment="Bottom" Width="50" Style="{DynamicResource TimeTextBoxStyle}" PreviewTextInput="OnlyDigitsProcedure" PreviewKeyDown="NoInsertProcedure" ContextMenu="{x:Null}" LostKeyboardFocus="NormalizeTimeFormat"/>
                            </StackPanel>
                            <Button Grid.Row="2" BorderThickness="0" Cursor="Hand" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="22" Height="22" Margin="0 0 0 8" Click="TimeButton_Click" Style="{DynamicResource AccentButtonStyle}">
                                <Button.Background>
                                    <ImageBrush ImageSource="/Icons/ConfirmButton.png"/>
                                </Button.Background>
                            </Button>
                        </Grid>
                    </Border>
                    <Border Margin="20 0 0 0" Background="#FF0D0D0D" CornerRadius="22" Width="150" Height="150">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="23*"/>
                                <RowDefinition Height="65*"/>
                            </Grid.RowDefinitions>
                            <TextBlock FontWeight="Bold" Text="Тип выключения" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="14"/>
                            <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <RadioButton Uid="0" IsChecked="True" x:Name="HybernationRB" Style="{DynamicResource RadioButtonStyle1}" Content="Гибернация" Foreground="White" Checked="HybernationRB_Checked"/>
                                <RadioButton Uid="1" x:Name="ShutdownRB"  Content="Выключение" Foreground="White" Margin="0 15" Style="{DynamicResource RadioButtonStyle1}" Checked="HybernationRB_Checked"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                </StackPanel>
            </Grid>
            <Grid x:Name="NotificationsPage" Grid.Row="0" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Top" Grid.Row="1">
                    <Border Background="#FF0D0D0D" CornerRadius="22" Width="150" Height="150" Visibility="Visible">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="73*"/>
                                <RowDefinition Height="30*"/>
                                <RowDefinition Height="47*"/>
                            </Grid.RowDefinitions>
                            <Image x:Name="NotificationsImage" Height="45" Width="36" VerticalAlignment="Bottom" Source="/Icons/Notifications.png" Stretch="Fill" />
                            <StackPanel Grid.Row="2">
                                <Image Tag="On" Cursor="Hand" x:Name="NotificationsToggle" Source="/Icons/ToggleOn.png" Height="22" Width="36" MouseLeftButtonDown="NotificationsToggle_MouseLeftButtonDown"/>
                                <TextBlock x:Name="NotificationsToggleText" Text="Вкл" Foreground="WhiteSmoke" HorizontalAlignment="Center"/>
                            </StackPanel>

                        </Grid>
                    </Border>
                    <Border Margin="20 0 0 0" Background="#FF0D0D0D" CornerRadius="22" Width="150" Height="150" Visibility="Visible">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="73*"/>
                                <RowDefinition Height="30*"/>
                                <RowDefinition Height="47*"/>
                            </Grid.RowDefinitions>
                            <Image x:Name="SoundsImage" Height="45" Width="45" VerticalAlignment="Bottom" Source="/Icons/Volume.png" Stretch="Fill" />
                            <StackPanel Grid.Row="2">
                                <Image Tag="On" Cursor="Hand" x:Name="SoundsToggle" Source="/Icons/ToggleOn.png" Height="22" Width="36" MouseLeftButtonDown="SoundToggle_MouseLeftButtonDown"/>
                                <TextBlock x:Name="SoundsToggleText" Text="Вкл" Foreground="WhiteSmoke" HorizontalAlignment="Center"/>
                            </StackPanel>

                        </Grid>
                    </Border>

                </StackPanel>
            </Grid>
            <Grid x:Name="TimerPage" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>
                <Border Background="#FF0D0D0D" CornerRadius="22" Grid.Row="1" Height="300" Width="317" VerticalAlignment="Top" HorizontalAlignment="Center">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="29*"/>
                            <RowDefinition Height="106*"/>
                            <RowDefinition Height="42*"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Таймер выключения" Foreground="White" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <StackPanel x:Name="TimerChoosePanel" Visibility="Visible" Grid.Row="1" Cursor="">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                                <TextBox Uid="hours" TextChanged="_maskedTextBox_TextChanged" x:Name="TimerBoxHours" MaxLength="2" TextAlignment="Center" Text="00" FontSize="36" Foreground="White" VerticalAlignment="Bottom" Width="50" Style="{DynamicResource TimeTextBoxStyle}" PreviewTextInput="OnlyDigitsProcedure" PreviewKeyDown="NoInsertProcedure" ContextMenu="{x:Null}" LostKeyboardFocus="NormalizeTimeFormat"/>
                                <TextBlock Margin="10 0" Text=":" Foreground="White" FontSize="44" VerticalAlignment="Center"/>
                                <TextBox Uid="minutes" TextChanged="_maskedTextBox_TextChanged" x:Name="TimerBoxMinutes" MaxLength="2" TextAlignment="Center" Text="00" FontSize="36" Foreground="White" VerticalAlignment="Bottom" Width="50" Style="{DynamicResource TimeTextBoxStyle}" PreviewTextInput="OnlyDigitsProcedure" PreviewKeyDown="NoInsertProcedure" ContextMenu="{x:Null}" LostKeyboardFocus="NormalizeTimeFormat"/>
                                <TextBlock Margin="10 0" Text=":" Foreground="White" FontSize="44" VerticalAlignment="Center"/>
                                <TextBox Uid="seconds" TextChanged="_maskedTextBox_TextChanged" x:Name="TimerBoxSeconds" MaxLength="2" TextAlignment="Center" Text="00" FontSize="36" Foreground="White" VerticalAlignment="Bottom" Width="50" Style="{DynamicResource TimeTextBoxStyle}" PreviewTextInput="OnlyDigitsProcedure" PreviewKeyDown="NoInsertProcedure" ContextMenu="{x:Null}" LostKeyboardFocus="NormalizeTimeFormat"/>
                            </StackPanel>
                            <TextBlock Margin="0 35 0 15" FontWeight="Bold" Text="Тип выключения" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="14"/>
                            <StackPanel Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <RadioButton Uid="0" IsChecked="True" x:Name="HybernationTimerRB" Style="{DynamicResource RadioButtonStyle1}" Content="Гибернация" Foreground="White" Checked="HybernationTimerRB_Checked"/>
                                <RadioButton Uid="1" x:Name="ShutdownTimerRB" Content="Выключение" Foreground="White" Margin="0 15" Style="{DynamicResource RadioButtonStyle1}" Checked="HybernationTimerRB_Checked"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel x:Name="TimerCountdownPanel" Visibility="Hidden" Grid.Row="1" VerticalAlignment="Center">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                                <TextBox IsEnabled="False" Uid="hours" x:Name="TimerCountdownBoxHours" MaxLength="2" TextAlignment="Center" Text="00" FontSize="36" Foreground="White" VerticalAlignment="Bottom" Width="50" Style="{DynamicResource TimeTextBoxStyle}" ContextMenu="{x:Null}"/>
                                <TextBlock Margin="10 0" Text=":" Foreground="White" FontSize="44" VerticalAlignment="Center"/>
                                <TextBox IsEnabled="False" Uid="minutes" x:Name="TimerCountdownBoxMinutes" MaxLength="2" TextAlignment="Center" Text="00" FontSize="36" Foreground="White" VerticalAlignment="Bottom" Width="50" Style="{DynamicResource TimeTextBoxStyle}" ContextMenu="{x:Null}"/>
                                <TextBlock Margin="10 0" Text=":" Foreground="White" FontSize="44" VerticalAlignment="Center"/>
                                <TextBox IsEnabled="False" Uid="seconds" x:Name="TimerCountdownBoxSeconds" MaxLength="2" TextAlignment="Center" Text="00" FontSize="36" Foreground="White" VerticalAlignment="Bottom" Width="50" Style="{DynamicResource TimeTextBoxStyle}" ContextMenu="{x:Null}"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Grid.Row="2" VerticalAlignment="Top" Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button x:Name="StartTimerButton" Margin="15 0" Style="{DynamicResource CircleAccentButton}" Width="36" Height="36" Click="StartTimerButton_Click">
                                <Image Source="/Icons/PlayArrow.png"/>
                            </Button>
                            <Button x:Name="StopTimerButton" IsEnabled="False" Margin="15 0" Style="{DynamicResource CircleAccentButton}" Width="36" Height="36" Cursor="Hand" Click="StopTimerButton_Click">
                                <Image  Source="/Icons/Stop.png"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
            <Grid x:Name="SettingsPage" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="10*"/>
                </Grid.RowDefinitions>
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1">
                    <Border Background="#FF0D0D0D" CornerRadius="22" Width="150" Height="150" Visibility="Visible">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="73*"/>
                                <RowDefinition Height="30*"/>
                                <RowDefinition Height="47*"/>
                            </Grid.RowDefinitions>
                            <TextBlock FontWeight="Bold" Foreground="White" Text="Автозапуск" TextWrapping="Wrap" FontSize="16" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.RowSpan="2"/>
                            <StackPanel Grid.Row="2">
                                <Image Tag="Off" Cursor="Hand" x:Name="AutoStartToggle" Source="/Icons/ToggleOff.png" Height="22" Width="36" MouseLeftButtonDown="AutoStartToggle_MouseLeftButtonDown"/>
                                <TextBlock x:Name="AutoStartToggleText" Text="Выкл" Foreground="WhiteSmoke" HorizontalAlignment="Center"/>
                            </StackPanel>

                        </Grid>
                    </Border>
                    <Border Margin="20 0 0 0" Background="#FF0D0D0D" CornerRadius="22" Width="150" Height="150" Visibility="Visible">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="73*"/>
                                <RowDefinition Height="30*"/>
                                <RowDefinition Height="47*"/>
                            </Grid.RowDefinitions>
                            <TextBlock FontWeight="Bold" Foreground="White" Text="Запускать свернутым" TextWrapping="Wrap" FontSize="16" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.RowSpan="2"/>
                            <StackPanel Grid.Row="2">
                                <Image Tag="Off" Cursor="Hand" x:Name="TrayStartToggle" Source="/Icons/ToggleOff.png" Height="22" Width="36" MouseLeftButtonDown="TrayStartToggle_MouseLeftButtonDown"/>
                                <TextBlock x:Name="TrayStartToggleText" Text="Выкл" Foreground="WhiteSmoke" HorizontalAlignment="Center"/>
                            </StackPanel>

                        </Grid>
                    </Border>

                </StackPanel>
            </Grid>
            <Border Margin="0 0 0 15" Padding="15" HorizontalAlignment="Center" VerticalAlignment="Bottom" CornerRadius="15" Background="#FF0D0D0D"  MouseLeftButtonDown="Grid_MouseLeftButtonDown">
                <StackPanel Orientation="Horizontal">
                    <StackPanel  Margin="15 0">
                        <Image Uid="0" x:Name="AppIconImage" Cursor="Hand" Source="/Resources/AppIcon.png" Height="32" Width="32" MouseLeftButtonDown="Pages_Click"/>
                        <Border x:Name="HomeUnderscoore" Visibility="Visible" Width="26" Margin="0 2" Background="#FFFFD812" CornerRadius="1" Height="2"/>
                    </StackPanel>
                    <StackPanel Margin="15 0">
                        <Image MouseLeftButtonDown="Pages_Click" Uid="1" Cursor="Hand" Source="/Icons/Notifications.png" Height="32" Width="32"/>
                        <Border x:Name="NotificationsUnderscoore" Visibility="Hidden" Width="26" Margin="0 2" Background="#FFFFD812" CornerRadius="1" Height="2" />
                    </StackPanel>
                    <StackPanel Margin="15 0">
                        <Image MouseLeftButtonDown="Pages_Click"  Uid="2" Cursor="Hand" Source="/Icons/Timer.png" Height="32" Width="32"/>
                        <Border x:Name="TimerUnderscoore" Visibility="Hidden" Width="26" Margin="0 2" Background="#FFFFD812" CornerRadius="1" Height="2" />
                    </StackPanel>

                    <StackPanel Margin="15 0">
                        <Image MouseLeftButtonDown="Pages_Click"  Uid="3" Cursor="Hand" Source="/Icons/Settings.png" Height="32" Width="32"/>
                        <Border x:Name="SettingsUnderscoore" Visibility="Hidden" Width="26" Margin="0 2" Background="#FFFFD812" CornerRadius="1" Height="2" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </Grid>
    </Border>
</Window>
